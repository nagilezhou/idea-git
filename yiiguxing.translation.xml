<application>
  <component name="AppStorage">
    <histories>
      <item value="without making a copy" />
      <item value="Internally you can think of this" />
      <item value="which means a modificati //on to the input array will be known to the caller as well." />
      <item value="Note that the input array is passed in by reference" />
      <item value="Confused why the returned value is an integer but your answer is an array?" />
      <item value="Confused" />
      <item value="Clarification" />
      <item value="//Given a sorted array nums, remove the duplicates in-place such that each eleme //nt appears only once and returns the new length." />
      <item value="//Given a sorted array nums, remove the duplicates in-place such that each eleme //nt appears only once and returns the new length. // // Do not allocate extra space for another array, you must do this by modifying //the input array in-place with O(1) extra memory. // // Clarification: // // Confused why the returned value is an integer but your answer is an array? // // Note that the input array is passed in by reference, which means a modificati //on to the input array will be known to the caller as well. // // Internally you can think of this: // // //// nums is passed in by reference. (i.e., without making a copy) //int len = removeDuplicates(nums); // //// any modification to nums in your function would be known by the caller. //// using the length returned by your function, it prints the first len element //s. //for (int i = 0; i &lt; len; i++) { //    print(nums[i]); //} // // // Example 1: // // //Input: nums = [1,1,2] //Output: 2, nums = [1,2] //Explanation: Your function should return length = 2, with the first two elemen //ts of nums being 1 and 2 respectively. It doesn't matter what you leave beyond t //he returned length. // // // Example 2: // // //Input: nums = [0,0,1,1,1,2,2,3,3,4] //Output: 5, nums = [0,1,2,3,4] //Explanation: Your function should return length = 5, with the first five eleme //nts of nums being modified to 0, 1, 2, 3, and 4 respectively. It doesn't matter //what values are set beyond the returned length. // // // // Constraints: // // // 0 &lt;= nums.length &lt;= 3 * 104 // -104 &lt;= nums[i] &lt;= 104 // nums is sorted in ascending order. // // Related Topics 数组 双指针 //  1714  0" />
      <item value="Guard" />
      <item value="Definition" />
      <item value="Assembler" />
      <item value="Constraints:" />
      <item value="/Given an array of integers nums and an integer target, return indices of the t //wo numbers such that they add up to target." />
      <item value="multiple" />
      <item value="rather" />
      <item value="interesting" />
      <item value="&lt;p&gt;It is possible, and in fact common, for a base class to * implement AutoCloseable even though not all of its subclasses or * instances will hold releasable resources. For code that must operate * in complete generality, or when it is known that the {@code AutoCloseable} * instance requires resource release, it is recommended to use {@code * try}-with-resources constructions. However, when using facilities such as * {@link java.util.stream.Stream} that support both I/O-based and * non-I/O-based forms, {@code try}-with-resources blocks are in * general unnecessary when using non-I/O-based forms." />
      <item value="Metric" />
      <item value="GUARD" />
      <item value="guard" />
      <item value="Metrics" />
      <item value="* Method for changing state of an on/off deserialization feature for * this object mapper." />
      <item value="* Feature that determines whether encountering of unknown * properties (ones that do not map to a property, and there is * no &quot;any setter&quot; or handler that can handle it) * should result in a failure (by throwing a * {@link JsonMappingException}) or not. * This setting only takes effect after all other handling * methods for unknown properties have been tried, and * property remains unhandled. *&lt;p&gt; * Feature is enabled by default (meaning that a * {@link JsonMappingException} will be thrown if an unknown property * is encountered)." />
      <item value="Failed to deploy artifacts: Could not transfer artifact com.aliyun.unit.router:msha-sdk:pom:1.0.4-public-mix-20200821.033255-3 from/to snapshots (http://mvnrepo.alibaba-inc.com/mvn/snapshots): Failed to transfer file: http://mvnrepo.alibaba-inc.com/mvn/snapshots/com/aliyun/unit/router/msha-sdk/1.0.4-public-mix-SNAPSHOT/msha-sdk-1.0.4-public-mix-20200821.033255-3.pom. Return code is: 401, ReasonPhrase: Unauthorized." />
      <item value="Missing invocation to mocked type at this point; please make sure such invocations appear only after the declaration of a suitable mock field or parameter" />
      <item value="if this socket has an associated channel, the channel is in * non-blocking mode, and there is no connection ready to be * accepted" />
      <item value="associated" />
      <item value="Listens for a connection to be made to this socket and accepts * it. The method blocks until a connection is made. * * &lt;p&gt;A new Socket {@code s} is created and, if there * is a security manager, * the security manager's {@code checkAccept} method is called * with {@code s.getInetAddress().getHostAddress()} and * {@code s.getPort()} * as its arguments to ensure the operation is allowed. * This could result in a SecurityException. * * @exception IOException if an I/O error occurs when waiting for a * connection. * @exception SecurityException if a security manager exists and its * {@code checkAccept} method doesn't allow the operation. * @exception SocketTimeoutException if a timeout was previously set with setSoTimeout and * the timeout has been reached. * @exception java.nio.channels.IllegalBlockingModeException * if this socket has an associated channel, the channel is in * non-blocking mode, and there is no connection ready to be * accepted *" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="27" />
        <entry key="ENGLISH" value="29" />
      </map>
    </option>
  </component>
</application>